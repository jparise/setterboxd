[project]
name = "setterboxd"
version = "0.1.0"
description = "Discover completed and near-complete sets of movies in your Letterboxd watchlist"
requires-python = ">=3.11"
dependencies = [
    "pandas",
    "rich",
]

[dependency-groups]
dev = [
    "pyright",
    "ruff",
]

[tool.ruff]
# Set line length to 100 for long f-strings with Rich formatting
line-length = 100

# Target Python 3.11+ for performance improvements (~25% faster)
target-version = "py311"

[tool.ruff.lint]
# Enable recommended rules
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "RUF",  # ruff-specific rules
    "PT",   # flake8-pytest-style
    "PIE",  # flake8-pie (misc improvements)
    "PL",   # pylint
    "PERF", # performance improvements
    "FURB", # refurb (modernization)
    "RET",  # flake8-return
]

# Ignore specific rules
ignore = [
    "E501",    # Line too long (we have some long f-strings with Rich formatting)
    "B023",    # Function doesn't bind loop variable (false positive with urllib callback)
    "SIM113",  # Don't force enumerate when chunk_num tracking is clearer
    "SIM117",  # Nested with statements are sometimes more readable
    "PLR0915", # Too many statements (database conversion is inherently long)
    "PLR0912", # Too many branches (analyze_sets has many display paths)
    "PLR0913", # Too many arguments (analyze_sets needs many config options)
    "PLR2004", # Magic values (many are self-documenting like year tolerances, min lengths)
    "RUF001",  # Ambiguous unicode (intentional for normalization examples)
    "RUF002",  # Ambiguous unicode in docstrings
    "PT",      # pytest style (not using pytest)
]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"
